// Generated by Haxe 4.3.3
using haxe.root;

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace seedyrng {
	public class Xorshift128Plus : global::haxe.lang.HxObject, global::seedyrng.GeneratorInterface {
		
		static Xorshift128Plus() {
			unchecked{
				global::seedyrng.Xorshift128Plus.PARAMETER_A = 23;
				global::seedyrng.Xorshift128Plus.PARAMETER_B = 17;
				global::seedyrng.Xorshift128Plus.PARAMETER_C = 26;
				global::seedyrng.Xorshift128Plus.SEED_1 = ((long) (( ( ((long) (842650776) ) << 32 ) | ( ((long) (685298713) ) & 0xffffffffL ) )) );
			}
		}
		
		
		public Xorshift128Plus(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Xorshift128Plus() {
			global::seedyrng.Xorshift128Plus.__hx_ctor_seedyrng_Xorshift128Plus(this);
		}
		
		
		protected static void __hx_ctor_seedyrng_Xorshift128Plus(global::seedyrng.Xorshift128Plus __hx_this) {
			unchecked {
				__hx_this._currentAvailable = false;
				{
					__hx_this.set_seed(((long) (1) ));
				}
				
			}
		}
		
		
		public static int PARAMETER_A;
		
		public static int PARAMETER_B;
		
		public static int PARAMETER_C;
		
		public static long SEED_1;
		
		
		
		
		
		
		
		public long _seed;
		
		public long _state0;
		
		public long _state1;
		
		public long _current;
		
		public bool _currentAvailable;
		
		public virtual bool get_usesAllBits() {
			return false;
		}
		
		
		public virtual long get_seed() {
			return this._seed;
		}
		
		
		public virtual long set_seed(long @value) {
			unchecked {
				if (( ((long) (@value) ) != ((long) (0) ) )) {
				}
				else {
					@value = ((long) (1) );
				}
				
				this._seed = @value;
				this._state0 = @value;
				this._state1 = global::seedyrng.Xorshift128Plus.SEED_1;
				this._currentAvailable = false;
				return @value;
			}
		}
		
		
		public virtual global::haxe.io.Bytes get_state() {
			unchecked {
				global::haxe.io.Bytes bytes = global::haxe.io.Bytes.alloc(33);
				{
					long v = this._seed;
					{
						int v1 = ((int) (((long) (v) )) );
						bytes.b[0] = ((byte) (v1) );
						bytes.b[1] = ((byte) (( v1 >> 8 )) );
						bytes.b[2] = ((byte) (( v1 >> 16 )) );
						bytes.b[3] = ((byte) (((int) (( ((uint) (v1) ) >> 24 )) )) );
					}
					
					{
						int pos = 4;
						int v2 = ((int) (( ((long) (v) ) >> 32 )) );
						bytes.b[pos] = ((byte) (v2) );
						bytes.b[( pos + 1 )] = ((byte) (( v2 >> 8 )) );
						bytes.b[( pos + 2 )] = ((byte) (( v2 >> 16 )) );
						bytes.b[( pos + 3 )] = ((byte) (((int) (( ((uint) (v2) ) >> 24 )) )) );
					}
					
				}
				
				{
					long v3 = this._state0;
					{
						int v4 = ((int) (((long) (v3) )) );
						bytes.b[8] = ((byte) (v4) );
						bytes.b[9] = ((byte) (( v4 >> 8 )) );
						bytes.b[10] = ((byte) (( v4 >> 16 )) );
						bytes.b[11] = ((byte) (((int) (( ((uint) (v4) ) >> 24 )) )) );
					}
					
					{
						int pos1 = 12;
						int v5 = ((int) (( ((long) (v3) ) >> 32 )) );
						bytes.b[pos1] = ((byte) (v5) );
						bytes.b[( pos1 + 1 )] = ((byte) (( v5 >> 8 )) );
						bytes.b[( pos1 + 2 )] = ((byte) (( v5 >> 16 )) );
						bytes.b[( pos1 + 3 )] = ((byte) (((int) (( ((uint) (v5) ) >> 24 )) )) );
					}
					
				}
				
				{
					long v6 = this._state1;
					{
						int v7 = ((int) (((long) (v6) )) );
						bytes.b[16] = ((byte) (v7) );
						bytes.b[17] = ((byte) (( v7 >> 8 )) );
						bytes.b[18] = ((byte) (( v7 >> 16 )) );
						bytes.b[19] = ((byte) (((int) (( ((uint) (v7) ) >> 24 )) )) );
					}
					
					{
						int pos2 = 20;
						int v8 = ((int) (( ((long) (v6) ) >> 32 )) );
						bytes.b[pos2] = ((byte) (v8) );
						bytes.b[( pos2 + 1 )] = ((byte) (( v8 >> 8 )) );
						bytes.b[( pos2 + 2 )] = ((byte) (( v8 >> 16 )) );
						bytes.b[( pos2 + 3 )] = ((byte) (((int) (( ((uint) (v8) ) >> 24 )) )) );
					}
					
				}
				
				bytes.b[24] = ((byte) (( (this._currentAvailable) ? (1) : (0) )) );
				if (this._currentAvailable) {
					long v9 = this._current;
					{
						int v10 = ((int) (((long) (v9) )) );
						bytes.b[25] = ((byte) (v10) );
						bytes.b[26] = ((byte) (( v10 >> 8 )) );
						bytes.b[27] = ((byte) (( v10 >> 16 )) );
						bytes.b[28] = ((byte) (((int) (( ((uint) (v10) ) >> 24 )) )) );
					}
					
					{
						int pos3 = 29;
						int v11 = ((int) (( ((long) (v9) ) >> 32 )) );
						bytes.b[pos3] = ((byte) (v11) );
						bytes.b[( pos3 + 1 )] = ((byte) (( v11 >> 8 )) );
						bytes.b[( pos3 + 2 )] = ((byte) (( v11 >> 16 )) );
						bytes.b[( pos3 + 3 )] = ((byte) (((int) (( ((uint) (v11) ) >> 24 )) )) );
					}
					
				}
				
				return bytes;
			}
		}
		
		
		public virtual global::haxe.io.Bytes set_state(global::haxe.io.Bytes @value) {
			unchecked {
				if (( @value.length != 33 )) {
					throw ((global::System.Exception) (global::haxe.Exception.thrown(global::haxe.lang.Runtime.concat("Wrong state size ", global::haxe.lang.Runtime.toString(@value.length)))) );
				}
				
				int pos = 4;
				this._seed = ((long) (( ( ((long) (((int) (( ( ( ((int) (@value.b[pos]) ) | ( ((int) (@value.b[( pos + 1 )]) ) << 8 ) ) | ( ((int) (@value.b[( pos + 2 )]) ) << 16 ) ) | ( ((int) (@value.b[( pos + 3 )]) ) << 24 ) )) )) ) << 32 ) | ( ((long) (((int) (( ( ( ((int) (@value.b[0]) ) | ( ((int) (@value.b[1]) ) << 8 ) ) | ( ((int) (@value.b[2]) ) << 16 ) ) | ( ((int) (@value.b[3]) ) << 24 ) )) )) ) & 0xffffffffL ) )) );
				int pos1 = 12;
				this._state0 = ((long) (( ( ((long) (((int) (( ( ( ((int) (@value.b[pos1]) ) | ( ((int) (@value.b[( pos1 + 1 )]) ) << 8 ) ) | ( ((int) (@value.b[( pos1 + 2 )]) ) << 16 ) ) | ( ((int) (@value.b[( pos1 + 3 )]) ) << 24 ) )) )) ) << 32 ) | ( ((long) (((int) (( ( ( ((int) (@value.b[8]) ) | ( ((int) (@value.b[9]) ) << 8 ) ) | ( ((int) (@value.b[10]) ) << 16 ) ) | ( ((int) (@value.b[11]) ) << 24 ) )) )) ) & 0xffffffffL ) )) );
				int pos2 = 20;
				this._state1 = ((long) (( ( ((long) (((int) (( ( ( ((int) (@value.b[pos2]) ) | ( ((int) (@value.b[( pos2 + 1 )]) ) << 8 ) ) | ( ((int) (@value.b[( pos2 + 2 )]) ) << 16 ) ) | ( ((int) (@value.b[( pos2 + 3 )]) ) << 24 ) )) )) ) << 32 ) | ( ((long) (((int) (( ( ( ((int) (@value.b[16]) ) | ( ((int) (@value.b[17]) ) << 8 ) ) | ( ((int) (@value.b[18]) ) << 16 ) ) | ( ((int) (@value.b[19]) ) << 24 ) )) )) ) & 0xffffffffL ) )) );
				this._currentAvailable = ( ((int) (@value.b[24]) ) == 1 );
				if (this._currentAvailable) {
					int pos3 = 29;
					this._current = ((long) (( ( ((long) (((int) (( ( ( ((int) (@value.b[pos3]) ) | ( ((int) (@value.b[( pos3 + 1 )]) ) << 8 ) ) | ( ((int) (@value.b[( pos3 + 2 )]) ) << 16 ) ) | ( ((int) (@value.b[( pos3 + 3 )]) ) << 24 ) )) )) ) << 32 ) | ( ((long) (((int) (( ( ( ((int) (@value.b[25]) ) | ( ((int) (@value.b[26]) ) << 8 ) ) | ( ((int) (@value.b[27]) ) << 16 ) ) | ( ((int) (@value.b[28]) ) << 24 ) )) )) ) & 0xffffffffL ) )) );
				}
				
				return @value;
			}
		}
		
		
		public virtual void stepNext() {
			unchecked {
				long x = this._state0;
				long y = this._state1;
				this._state0 = y;
				x = ((long) (( ((long) (x) ) ^ ((long) (( ((long) (x) ) << 23 )) ) )) );
				this._state1 = ((long) (( ((long) (( ((long) (( ((long) (x) ) ^ ((long) (y) ) )) ) ^ ((long) (( ((long) (x) ) >> 17 )) ) )) ) ^ ((long) (( ((long) (y) ) >> 26 )) ) )) );
				this._current = ((long) (( ((long) (this._state1) ) + ((long) (y) ) )) );
			}
		}
		
		
		public virtual int nextInt() {
			unchecked {
				if (this._currentAvailable) {
					this._currentAvailable = false;
					return ((int) (((long) (this._current) )) );
				}
				else {
					this.stepNext();
					this._currentAvailable = true;
					return ((int) (( ((long) (this._current) ) >> 32 )) );
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 53394607:
					{
						this._currentAvailable = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 94107066:
					{
						this._current = ((long) (@value) );
						return @value;
					}
					
					
					case 1953688223:
					{
						this._state1 = ((long) (@value) );
						return @value;
					}
					
					
					case 1953688222:
					{
						this._state0 = ((long) (@value) );
						return @value;
					}
					
					
					case 2137104720:
					{
						this._seed = ((long) (@value) );
						return @value;
					}
					
					
					case 67859985:
					{
						this.set_state(((global::haxe.io.Bytes) (@value) ));
						return @value;
					}
					
					
					case 1280345457:
					{
						this.set_seed(((long) (@value) ));
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 624859580:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "nextInt", 624859580)) );
					}
					
					
					case 472591967:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "stepNext", 472591967)) );
					}
					
					
					case 721796724:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_state", 721796724)) );
					}
					
					
					case 1203032680:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_state", 1203032680)) );
					}
					
					
					case 2053675630:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "set_seed", 2053675630)) );
					}
					
					
					case 1275805946:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_seed", 1275805946)) );
					}
					
					
					case 194589554:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_usesAllBits", 194589554)) );
					}
					
					
					case 53394607:
					{
						return this._currentAvailable;
					}
					
					
					case 94107066:
					{
						return this._current;
					}
					
					
					case 1953688223:
					{
						return this._state1;
					}
					
					
					case 1953688222:
					{
						return this._state0;
					}
					
					
					case 2137104720:
					{
						return this._seed;
					}
					
					
					case 1253538779:
					{
						return this.get_usesAllBits();
					}
					
					
					case 67859985:
					{
						return this.get_state();
					}
					
					
					case 1280345457:
					{
						return this.get_seed();
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 624859580:
					{
						return this.nextInt();
					}
					
					
					case 472591967:
					{
						this.stepNext();
						break;
					}
					
					
					case 721796724:
					{
						return this.set_state(((global::haxe.io.Bytes) (dynargs[0]) ));
					}
					
					
					case 1203032680:
					{
						return this.get_state();
					}
					
					
					case 2053675630:
					{
						return this.set_seed(((long) (dynargs[0]) ));
					}
					
					
					case 1275805946:
					{
						return this.get_seed();
					}
					
					
					case 194589554:
					{
						return this.get_usesAllBits();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::haxe.root.Array<string> baseArr) {
			baseArr.push("_currentAvailable");
			baseArr.push("_current");
			baseArr.push("_state1");
			baseArr.push("_state0");
			baseArr.push("_seed");
			baseArr.push("usesAllBits");
			baseArr.push("state");
			baseArr.push("seed");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


